name: Create Release

on:
  push:
    branches:
      - EMS-*
      
  release:
    types: [published]
  pull_request:
    paths: [.github/workflows/create_release.yml]

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    # https://github.com/softprops/action-gh-release?tab=readme-ov-file#permissions
    permissions:
      contents: write
    steps:
      - uses: malfet/checkout@silent-checkout
        with:
          submodules: 'recursive'
          ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.sha }}
      - name: Create tag
        if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/heads/EMS-') }}
        run: |
          tag_name=$(echo "${{ github.ref }}" | sed -n 's#^refs/heads/EMS-\(.*\)-feature-freeze$#\1#p')
          git tag "$tag_name"
          git push origin "$tag_name"
          echo "PT_GITHUB_REF=$tag_name" >> "$GITHUB_ENV"
      - name: Set filenames
        run: |
          tag="$PT_GITHUB_REF"
          # replace directory separators with _ in branch name
          tag_or_branch="${tag_or_branch//\//_}"
          echo "PT_RELEASE_NAME=LMS-tools-$tag" >> "$GITHUB_ENV"
          echo "PT_RELEASE_FILE=LMS-tools-$tag.tar.gz" >> "$GITHUB_ENV"
      - name: Create source distribution
        run: |
            # Create new folder with specified name so extracting the archive yields that
            rm -rf "/tmp/$PT_RELEASE_NAME"
            cp -r "$PWD" "/tmp/$PT_RELEASE_NAME"
            mv "/tmp/$PT_RELEASE_NAME" .
            # Cleanup
            rm -rf "$PT_RELEASE_NAME"/{.circleci,.ci}
            find "$PT_RELEASE_NAME" -name '.git*' -exec rm -rv {} \; || true
            # Create archive
            tar -czf "$PT_RELEASE_FILE" "$PT_RELEASE_NAME"
            echo "Created source archive $PT_RELEASE_FILE with content: $(ls -a "$PT_RELEASE_NAME")"
      - name: Upload source distribution
        if: ${{ github.event_name == 'release' }}
        uses: softprops/action-gh-release@v1
        with:
          files: ${{env.PT_RELEASE_FILE}}

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}-${{ github.event_name }}
  cancel-in-progress: true
